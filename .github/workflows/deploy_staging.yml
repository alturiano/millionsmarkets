name: Deploy Staging

on:
  push:
    branches:
    - staging

jobs:
  deploy_staging:
    runs-on: ubuntu-latest
    environment: staging

    env:
      AWS_ACCESS_KEY_ID : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_BIN_API_KEY : ${{ secrets.TF_VAR_BIN_API_KEY }}
      TF_VAR_BIN_API_SECRET : ${{ secrets.TF_VAR_BIN_API_SECRET }}
      TF_VAR_STAGING : ${{ vars.TF_VAR_STAGING }}
      TF_VAR_FROM_LAMBDA : ${{ vars.TF_VAR_FROM_LAMBDA }}
      TF_VAR_COSMOBOT_DISCORD_CRYPTO_HOOK_URL : ${{ secrets.TF_VAR_COSMOBOT_DISCORD_CRYPTO_HOOK_URL }}
      TF_VAR_COSMOBOT_DISCORD_STOCK_HOOK_URL : ${{ secrets.TF_VAR_COSMOBOT_DISCORD_STOCK_HOOK_URL }}
      TF_VAR_COSMOBOT_DISCORD_ROLE : ${{ vars.TF_VAR_COSMOBOT_DISCORD_ROLE }}
      TF_VAR_MONITORING_DISCORD_HOOK_URL : ${{ secrets.TF_VAR_MONITORING_DISCORD_HOOK_URL }}

    steps:
    - uses: actions/checkout@v3

    - name: Install zip
      run: sudo apt-get install -y zip

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2

    - name: Verify Terraform version
      run: terraform --version

    - name: Terraform init
      run: terraform init --upgrade --input=false

    - name: Terraform validation
      run: terraform validate

    - name: Terraform import cosmoagent CRYPTO lambda function
      run: terraform import --input=false aws_lambda_function.cosmoagent_crypto_lambda cosmoagent_crypto_lambda_staging
      continue-on-error: true

    - name: Terraform import cosmoagent CRYPTO lambda trigger
      run: terraform import --input=false aws_lambda_permission.allow_eventbridge_cosmoagent_crypto cosmoagent_crypto_lambda_staging/event_bridge_trigger_cosmoagent_crypto
      continue-on-error: true

    - name: Terraform import cosmoagent STOCK lambda function
      run: terraform import --input=false aws_lambda_function.cosmoagent_stock_lambda cosmoagent_stock_lambda_staging
      continue-on-error: true

    - name: Terraform import cosmoagent STOCK lambda trigger
      run: terraform import --input=false aws_lambda_permission.allow_eventbridge_cosmoagent_stock cosmoagent_stock_lambda_staging/event_bridge_trigger_cosmoagent_stock
      continue-on-error: true

    - name: Terraform import monitoring lambda function
      run: terraform import --input=false aws_lambda_function.monitoring_lambda monitoring_lambda_staging
      continue-on-error: true

    - name: Terraform import monitoring lambda trigger
      run: terraform import --input=false aws_lambda_permission.allow_eventbridge_monitoring monitoring_lambda_staging/event_bridge_trigger_monitoring
      continue-on-error: true

    - name: Terraform import IAM Instance Profile
      run: terraform import --input=false aws_iam_instance_profile.cosmobot_ec2_profile cosmobot_ec2_profile_staging
      continue-on-error: true

    - name: Terraform apply
      run: terraform apply --auto-approve --input=false
